import pandas as pd
from plotly.subplots import make_subplots
import plotly.graph_objects as go
from dash import dash, dcc, html, Input, Output

# Connect to GoogleSheets
sheet_id = ${{ secrets.GOOGLE_SHEET_ID }}
sheet_name = 'operations'
url = f'https://docs.google.com/spreadsheets/d/{sheet_id}/gviz/tq?tqx=out:csv&sheet={sheet_name}'

df = pd.read_csv(url, on_bad_lines='skip')
df = df[df['Status'] != 'FAILED']  # Filter failed operations

# Convert data
df['Payment_Amount'] = df['Payment_Amount'].str.replace(',', '.').astype('float')
df['Operation_Date'] = df['Operation_Date'].astype('datetime64')

# print(df.info())
# print(df.head(100))

# Filer data

date_from = '2023-02-01 00:00:00'
filtered_categories = ('Переводы', 'Вне бюджета')

df = df[((df['Operation_Date'] >= date_from) & (~df['Category'].isin(filtered_categories)))]

# Create aggregated table
df = df.groupby(['Category']).agg({
    'Payment_Amount': 'sum'}).reset_index()

# Create Cost DataFrame
cost_df = df[df['Payment_Amount'] <= 0].sort_values('Payment_Amount', ascending=True)

print(cost_df)

# Create Board and Charts
board = make_subplots(
    rows=1, cols=2,
    shared_xaxes=True,
    vertical_spacing=0.03,
    specs=[[{'type': 'table'},
           {'type': 'pie'}]]
)

board.add_trace(go.Table(
    header=dict(
        values=['Category', 'Cost'],
        fill_color='lavender',
        align='left', font=dict(color='black', size=12)
    ),
    cells=dict(
        values=[cost_df.Category, cost_df.Payment_Amount],
        align='left', font=dict(color='black', size=11)
        )),
    row=1, col=1
)


# Add another traces
"""
board.add_trace([go.Pie(
    labels=list(cost_df.Category),
    values=list(cost_df.Payment_Amount))],
    row=1, col=2
)


board.add_trace(go.Icicle(
    data=cost_df,
    name='Category',
    values='Payment_Amount'))
"""

# Make pretty
board.update_layout(
    title_text="Budget Board",
    width=1000,
    height=1000
)

app = dash.Dash()
app.layout = html.Div([
    dcc.Graph(figure=board)
])

app.run_server(debug=True, use_reloader=False)
